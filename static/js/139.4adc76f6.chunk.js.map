{"version":3,"file":"static/js/139.4adc76f6.chunk.js","mappings":"yOAMMA,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,mBACPC,IAAI,GAAI,oBACRC,SAAS,0BACZC,MAAON,EAAAA,KACJK,SAAS,0BACTF,IAAI,EAAG,mBACVI,SAAUP,EAAAA,KACPK,SAAS,0BACTF,IAAI,EAAG,mBACPC,IAAI,GAAI,sBAGAI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CACbZ,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZQ,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAQC,GACjBT,GACEU,EAAAA,EAAAA,IAAS,CACPjB,KAAMe,EAAOf,KACbI,MAAOW,EAAOX,MACdC,SAAUU,EAAOV,YAGrBW,EAAQE,WACV,EAAER,UAEFS,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAV,SAAA,EACHS,EAAAA,EAAAA,MAAA,SAAAT,SAAA,CAAO,QAELD,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACrB,KAAK,UACZS,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACtB,KAAK,OAAOuB,UAAU,YAEtCJ,EAAAA,EAAAA,MAAA,SAAAT,SAAA,CAAO,SAELD,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACrB,KAAK,QAAQwB,KAAK,WACzBf,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACtB,KAAK,QAAQuB,UAAU,YAEvCJ,EAAAA,EAAAA,MAAA,SAAAT,SAAA,CAAO,YAELD,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACrB,KAAK,WAAWwB,KAAK,cAC5Bf,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACtB,KAAK,WAAWuB,UAAU,YAE1Cd,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAAQd,SAAC,mBAKhC,E,UC7De,SAASe,IACtB,OACEN,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACED,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAAAhB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBAETD,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Min length is 2')\n    .max(20, 'Max length is 20')\n    .required('This field is required'),\n  email: Yup.string()\n    .required('This field is required')\n    .min(7, 'Min length is 7'),\n  password: Yup.string()\n    .required('This field is required')\n    .min(7, 'Min length is 7')\n    .max(20, 'Max length is 12'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={registerSchema}\n        onSubmit={(values, actions) => {\n          dispatch(\n            register({\n              name: values.name,\n              email: values.email,\n              password: values.password,\n            })\n          );\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <label>\n            Name\n            <Field name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </label>\n          <label>\n            Email\n            <Field name=\"email\" type=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </label>\n          <label>\n            Password\n            <Field name=\"password\" type=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </label>\n          <button type=\"submit\">Register</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["registerSchema","Yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","_jsxs","Form","Field","ErrorMessage","component","type","Register","Helmet"],"sourceRoot":""}